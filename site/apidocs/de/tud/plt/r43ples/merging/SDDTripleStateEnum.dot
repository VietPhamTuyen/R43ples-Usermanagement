#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// de.tud.plt.r43ples.merging.SDDTripleStateEnum
	c4755 [label=<<table title="de.tud.plt.r43ples.merging.SDDTripleStateEnum" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./SDDTripleStateEnum.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> SDDTripleStateEnum </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ADDED </td></tr>
<tr><td align="left" balign="left"> DELETED </td></tr>
<tr><td align="left" balign="left"> ORIGINAL </td></tr>
<tr><td align="left" balign="left"> NOTINCLUDED </td></tr>
		</table></td></tr>
		</table>>, URL="./SDDTripleStateEnum.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.management.ProcessManagement
	c4767 [label=<<table title="de.tud.plt.r43ples.merging.management.ProcessManagement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./management/ProcessManagement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ProcessManagement </td></tr>
<tr><td align="center" balign="center"> de.tud.plt.r43ples.merging.management </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ProcessManagement() </td></tr>
<tr><td align="left" balign="left"> + createMergeQuery(graphName : java.lang.String, sdd : java.lang.String, user : java.lang.String, commitMessage : java.lang.String, type : de.tud.plt.r43ples.merging.MergeQueryTypeEnum, branchNameA : java.lang.String, branchNameB : java.lang.String, triples : java.lang.String) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + readDifferenceModel(differenceModelToRead : java.lang.String, differenceModel : de.tud.plt.r43ples.merging.model.structure.DifferenceModel, format : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + convertSDDStringToSDDTripleState(state : java.lang.String) : de.tud.plt.r43ples.merging.SDDTripleStateEnum </td></tr>
<tr><td align="left" balign="left"> + tripleToString(triple : de.tud.plt.r43ples.merging.model.structure.Triple) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getSubject(triple : de.tud.plt.r43ples.merging.model.structure.Triple) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getPredicate(triple : de.tud.plt.r43ples.merging.model.structure.Triple) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getObject(triple : de.tud.plt.r43ples.merging.model.structure.Triple) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getTriplesOfMergeWithQuery(differenceModel : de.tud.plt.r43ples.merging.model.structure.DifferenceModel) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getAllIndividualsOfRevision(graphName : java.lang.String, revisionName : java.lang.String) : java.util.ArrayList&lt;java.lang.String&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllTriplesOfIndividual(graphName : java.lang.String, revisionName : java.lang.String, individualUri : java.lang.String, differenceModel : de.tud.plt.r43ples.merging.model.structure.DifferenceModel) : java.util.HashMap&lt;java.lang.String, de.tud.plt.r43ples.merging.model.structure.TripleIndividualStructure&gt; </td></tr>
<tr><td align="left" balign="left"> + getDifferenceByTriple(triple : de.tud.plt.r43ples.merging.model.structure.Triple, differenceModel : de.tud.plt.r43ples.merging.model.structure.DifferenceModel) : de.tud.plt.r43ples.merging.model.structure.Difference </td></tr>
<tr><td align="left" balign="left"> + createIndividualModelOfRevision(graphName : java.lang.String, revisionName : java.lang.String, differenceModel : de.tud.plt.r43ples.merging.model.structure.DifferenceModel) : de.tud.plt.r43ples.merging.model.structure.IndividualModel </td></tr>
<tr><td align="left" balign="left"> + createIndividualTableList(individualA : java.lang.String, individualB : java.lang.String, individualModelBranchA : de.tud.plt.r43ples.merging.model.structure.IndividualModel, individualModelBranchB : de.tud.plt.r43ples.merging.model.structure.IndividualModel, tableModel : de.tud.plt.r43ples.merging.model.structure.TableModel) : java.util.List&lt;de.tud.plt.r43ples.merging.model.structure.TableRow&gt; </td></tr>
<tr><td align="left" balign="left"> + createHighLevelChangeRenamingModel(highLevelChangeModel : de.tud.plt.r43ples.merging.model.structure.HighLevelChangeModel, differenceModel : de.tud.plt.r43ples.merging.model.structure.DifferenceModel) </td></tr>
<tr><td align="left" balign="left"> + getAllPrefixesOfDifferenceMap(differenceMap : java.util.HashMap&lt;java.lang.String, de.tud.plt.r43ples.merging.model.structure.Difference&gt;) : java.util.HashMap&lt;java.lang.String, de.tud.plt.r43ples.merging.model.structure.Difference&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllDifferencesByPrefix(prefix : java.lang.String, differenceMap : java.util.HashMap&lt;java.lang.String, de.tud.plt.r43ples.merging.model.structure.Difference&gt;) : java.util.ArrayList&lt;de.tud.plt.r43ples.merging.model.structure.Difference&gt; </td></tr>
<tr><td align="left" balign="left"> + createHighLevelChangeTableModel(highLevelChangeModel : de.tud.plt.r43ples.merging.model.structure.HighLevelChangeModel, highLevelChangeTableModel : de.tud.plt.r43ples.merging.model.structure.HighLevelChangeTableModel) </td></tr>
<tr><td align="left" balign="left"> + createDifferenceTree(differenceModel : de.tud.plt.r43ples.merging.model.structure.DifferenceModel, treeList : java.util.List&lt;de.tud.plt.r43ples.merging.model.structure.TreeNode&gt;) </td></tr>
<tr><td align="left" balign="left"> + createTableModel(differenceModel : de.tud.plt.r43ples.merging.model.structure.DifferenceModel, tableModel : de.tud.plt.r43ples.merging.model.structure.TableModel) </td></tr>
<tr><td align="left" balign="left"> + convertTripleStringToPrefixTripleString(tripleString : java.lang.String) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getPropertiesOfRevision(graphName : java.lang.String, branchNameA : java.lang.String, branchNameB : java.lang.String) : java.util.ArrayList&lt;java.lang.String&gt; </td></tr>
<tr><td align="left" balign="left"> + getWholeContentOfRevision(graphName : java.lang.String, revision : java.lang.String) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + getAllTriplesDividedIntoInsertAndDelete(differenceModel : de.tud.plt.r43ples.merging.model.structure.DifferenceModel, model : com.hp.hpl.jena.rdf.model.Model) : java.util.ArrayList&lt;java.lang.String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./management/ProcessManagement.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.model.structure.DifferenceGroup
	c4786 [label=<<table title="de.tud.plt.r43ples.merging.model.structure.DifferenceGroup" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./model/structure/DifferenceGroup.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DifferenceGroup </td></tr>
<tr><td align="center" balign="center"> de.tud.plt.r43ples.merging.model.structure </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DifferenceGroup(tripleStateA : de.tud.plt.r43ples.merging.SDDTripleStateEnum, tripleStateB : de.tud.plt.r43ples.merging.SDDTripleStateEnum, automaticResolutionState : de.tud.plt.r43ples.merging.SDDTripleStateEnum, conflicting : boolean) </td></tr>
<tr><td align="left" balign="left"> + getTripleStateA() : de.tud.plt.r43ples.merging.SDDTripleStateEnum </td></tr>
<tr><td align="left" balign="left"> + setTripleStateA(tripleStateA : de.tud.plt.r43ples.merging.SDDTripleStateEnum) </td></tr>
<tr><td align="left" balign="left"> + getTripleStateB() : de.tud.plt.r43ples.merging.SDDTripleStateEnum </td></tr>
<tr><td align="left" balign="left"> + setTripleStateB(tripleStateB : de.tud.plt.r43ples.merging.SDDTripleStateEnum) </td></tr>
<tr><td align="left" balign="left"> + getAutomaticResolutionState() : de.tud.plt.r43ples.merging.SDDTripleStateEnum </td></tr>
<tr><td align="left" balign="left"> + setAutomaticResolutionState(automaticResolutionState : de.tud.plt.r43ples.merging.SDDTripleStateEnum) </td></tr>
<tr><td align="left" balign="left"> + isConflicting() : boolean </td></tr>
<tr><td align="left" balign="left"> + setConflicting(conflicting : boolean) </td></tr>
<tr><td align="left" balign="left"> + getDifferences() : java.util.HashMap&lt;java.lang.String, de.tud.plt.r43ples.merging.model.structure.Difference&gt; </td></tr>
<tr><td align="left" balign="left"> + setDifferences(differences : java.util.HashMap&lt;java.lang.String, de.tud.plt.r43ples.merging.model.structure.Difference&gt;) </td></tr>
<tr><td align="left" balign="left"> + addDifference(identifier : java.lang.String, difference : de.tud.plt.r43ples.merging.model.structure.Difference) </td></tr>
<tr><td align="left" balign="left"> + removeDifference(identifier : java.lang.String) </td></tr>
		</table></td></tr>
		</table>>, URL="./model/structure/DifferenceGroup.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.model.structure.Difference
	c4787 [label=<<table title="de.tud.plt.r43ples.merging.model.structure.Difference" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./model/structure/Difference.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Difference </td></tr>
<tr><td align="center" balign="center"> de.tud.plt.r43ples.merging.model.structure </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Difference(triple : de.tud.plt.r43ples.merging.model.structure.Triple, referencedRevisionA : java.lang.String, referencedRevisionLabelA : java.lang.String, referencedRevisionB : java.lang.String, referencedRevisionLabelB : java.lang.String, tripleResolutionState : de.tud.plt.r43ples.merging.SDDTripleStateEnum, resolutionState : de.tud.plt.r43ples.merging.ResolutionStateEnum) </td></tr>
<tr><td align="left" balign="left"> + getTriple() : de.tud.plt.r43ples.merging.model.structure.Triple </td></tr>
<tr><td align="left" balign="left"> + setTriple(triple : de.tud.plt.r43ples.merging.model.structure.Triple) </td></tr>
<tr><td align="left" balign="left"> + getReferencedRevisionA() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + setReferencedRevisionA(referencedRevisionA : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + getReferencedRevisionLabelA() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + setReferencedRevisionLabelA(referencedRevisionLabelA : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + getReferencedRevisionB() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + setReferencedRevisionB(referencedRevisionB : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + getReferencedRevisionLabelB() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + setReferencedRevisionLabelB(referencedRevisionLabelB : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + getTripleResolutionState() : de.tud.plt.r43ples.merging.SDDTripleStateEnum </td></tr>
<tr><td align="left" balign="left"> + setTripleResolutionState(tripleResolutionState : de.tud.plt.r43ples.merging.SDDTripleStateEnum) </td></tr>
<tr><td align="left" balign="left"> + getResolutionState() : de.tud.plt.r43ples.merging.ResolutionStateEnum </td></tr>
<tr><td align="left" balign="left"> + setResolutionState(resolutionState : de.tud.plt.r43ples.merging.ResolutionStateEnum) </td></tr>
		</table></td></tr>
		</table>>, URL="./model/structure/Difference.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.model.structure.DifferenceGroup NAVASSOC de.tud.plt.r43ples.merging.SDDTripleStateEnum
	c4786:p -> c4755:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// de.tud.plt.r43ples.merging.model.structure.DifferenceGroup NAVASSOC de.tud.plt.r43ples.merging.SDDTripleStateEnum
	c4786:p -> c4755:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// de.tud.plt.r43ples.merging.model.structure.DifferenceGroup NAVASSOC de.tud.plt.r43ples.merging.SDDTripleStateEnum
	c4786:p -> c4755:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// de.tud.plt.r43ples.merging.model.structure.DifferenceGroup NAVASSOC de.tud.plt.r43ples.merging.model.structure.Difference
	c4786:p -> c4787:p [taillabel="", label="", headlabel="*", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// de.tud.plt.r43ples.merging.model.structure.Difference NAVASSOC de.tud.plt.r43ples.merging.SDDTripleStateEnum
	c4787:p -> c4755:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// de.tud.plt.r43ples.merging.management.ProcessManagement DEPEND de.tud.plt.r43ples.merging.SDDTripleStateEnum
	c4767:p -> c4755:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// de.tud.plt.r43ples.merging.management.ProcessManagement DEPEND de.tud.plt.r43ples.merging.model.structure.Difference
	c4767:p -> c4787:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// de.tud.plt.r43ples.merging.model.structure.DifferenceGroup DEPEND de.tud.plt.r43ples.merging.SDDTripleStateEnum
	c4786:p -> c4755:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// de.tud.plt.r43ples.merging.model.structure.Difference DEPEND de.tud.plt.r43ples.merging.SDDTripleStateEnum
	c4787:p -> c4755:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
}

