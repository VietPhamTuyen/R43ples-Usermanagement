#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// de.tud.plt.r43ples.merging.management.BranchManagement
	c419 [label=<<table title="de.tud.plt.r43ples.merging.management.BranchManagement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BranchManagement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BranchManagement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + prefixes : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BranchManagement() </td></tr>
<tr><td align="left" balign="left"> + getAllBranchNamesOfGraph(graphName : String) : ArrayList&lt;String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./BranchManagement.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.management.ClientConfig
	c420 [label=<<table title="de.tud.plt.r43ples.merging.management.ClientConfig" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClientConfig.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClientConfig </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + r43ples_sparql_endpoint : String </td></tr>
<tr><td align="left" balign="left"> + r43ples_json_revisedgraphs : String </td></tr>
<tr><td align="left" balign="left"> + r43ples_revision_graph : String </td></tr>
<tr><td align="left" balign="left"> + r43ples_sdd_graph : String </td></tr>
<tr><td align="left" balign="left"> + prefixMappings : HashMap&lt;String, String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClientConfig() </td></tr>
<tr><td align="left" balign="left"> + readConfig(configFilePath : String) </td></tr>
<tr><td align="left" balign="left"> + writeConfig(configFilePath : String) </td></tr>
		</table></td></tr>
		</table>>, URL="./ClientConfig.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.management.ProcessManagement
	c421 [label=<<table title="de.tud.plt.r43ples.merging.management.ProcessManagement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ProcessManagement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ProcessManagement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ProcessManagement() </td></tr>
<tr><td align="left" balign="left"> + createMergeQuery(graphName : String, sdd : String, user : String, commitMessage : String, type : MergeQueryTypeEnum, branchNameA : String, branchNameB : String, triples : String) : String </td></tr>
<tr><td align="left" balign="left"> + readDifferenceModel(differenceModelToRead : String, differenceModel : DifferenceModel, format : String) </td></tr>
<tr><td align="left" balign="left"> + readTurtleStringToJenaModel(triples : String, format : String) : Model </td></tr>
<tr><td align="left" balign="left"> + writeJenaModelToNTriplesString(model : Model) : String </td></tr>
<tr><td align="left" balign="left"> + convertSDDStringToSDDTripleState(state : String) : SDDTripleStateEnum </td></tr>
<tr><td align="left" balign="left"> + tripleToString(triple : Triple) : String </td></tr>
<tr><td align="left" balign="left"> + getSubject(triple : Triple) : String </td></tr>
<tr><td align="left" balign="left"> + getPredicate(triple : Triple) : String </td></tr>
<tr><td align="left" balign="left"> + getObject(triple : Triple) : String </td></tr>
<tr><td align="left" balign="left"> + getTriplesOfMergeWithQuery(differenceModel : DifferenceModel) : String </td></tr>
<tr><td align="left" balign="left"> + getAllIndividualsOfRevision(graphName : String, revisionName : String) : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllTriplesOfIndividual(graphName : String, revisionName : String, individualUri : String, differenceModel : DifferenceModel) : HashMap&lt;String, TripleIndividualStructure&gt; </td></tr>
<tr><td align="left" balign="left"> + getDifferenceByTriple(triple : Triple, differenceModel : DifferenceModel) : Difference </td></tr>
<tr><td align="left" balign="left"> + createIndividualModelOfRevision(graphName : String, revisionName : String, differenceModel : DifferenceModel) : IndividualModel </td></tr>
<tr><td align="left" balign="left"> + createIndividualTableList(individualA : String, individualB : String, individualModelBranchA : IndividualModel, individualModelBranchB : IndividualModel, tableModel : TableModel) : List&lt;TableRow&gt; </td></tr>
<tr><td align="left" balign="left"> + createHighLevelChangeRenamingModel(highLevelChangeModel : HighLevelChangeModel, differenceModel : DifferenceModel) </td></tr>
<tr><td align="left" balign="left"> + getAllPrefixesOfDifferenceMap(differenceMap : HashMap&lt;String, Difference&gt;) : HashMap&lt;String, Difference&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllDifferencesByPrefix(prefix : String, differenceMap : HashMap&lt;String, Difference&gt;) : ArrayList&lt;Difference&gt; </td></tr>
<tr><td align="left" balign="left"> + createHighLevelChangeTableModel(highLevelChangeModel : HighLevelChangeModel, highLevelChangeTableModel : HighLevelChangeTableModel) </td></tr>
<tr><td align="left" balign="left"> + createDifferenceTree(differenceModel : DifferenceModel, treeList : List&lt;TreeNode&gt;) </td></tr>
<tr><td align="left" balign="left"> + createTableModel(differenceModel : DifferenceModel, tableModel : TableModel) </td></tr>
<tr><td align="left" balign="left"> + convertTripleStringToPrefixTripleString(tripleString : String) : String </td></tr>
<tr><td align="left" balign="left"> + getPropertiesOfRevision(graphName : String, branchNameA : String, branchNameB : String) : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getWholeContentOfRevision(graphName : String, revision : String) : Model </td></tr>
<tr><td align="left" balign="left"> + getAllTriplesDividedIntoInsertAndDelete(differenceModel : DifferenceModel, model : Model) : ArrayList&lt;String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./ProcessManagement.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.management.QueryManagement
	c422 [label=<<table title="de.tud.plt.r43ples.merging.management.QueryManagement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./QueryManagement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> QueryManagement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + QueryManagement() </td></tr>
<tr><td align="left" balign="left"> + getSelectConstructAskResponseClassic(query : String, format : String) : String </td></tr>
<tr><td align="left" balign="left"> + getSelectConstructAskResponse(query : String, format : String) : String </td></tr>
		</table></td></tr>
		</table>>, URL="./QueryManagement.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.management.ReportManagement
	c423 [label=<<table title="de.tud.plt.r43ples.merging.management.ReportManagement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ReportManagement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ReportManagement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ReportManagement() </td></tr>
<tr><td align="left" balign="left"> + initialReportResult(differenceModel : DifferenceModel) : ReportResult </td></tr>
<tr><td align="left" balign="left"> + createReportTableRowList(differenceModel : DifferenceModel) : List&lt;ReportTableRow&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./ReportManagement.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.management.RewriteManagement
	c424 [label=<<table title="de.tud.plt.r43ples.merging.management.RewriteManagement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RewriteManagement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RewriteManagement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RewriteManagement() </td></tr>
<tr><td align="left" balign="left"> + rewriteQuery(query_r43ples : String) : String </td></tr>
		</table></td></tr>
		</table>>, URL="./RewriteManagement.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.management.StrategyManagement
	c425 [label=<<table title="de.tud.plt.r43ples.merging.management.StrategyManagement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./StrategyManagement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> StrategyManagement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + prefixes : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + StrategyManagement() </td></tr>
<tr><td align="left" balign="left"> + isFastForward(revisionBranchA : String, revisionBranchB : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + createFastForwardQuery(graphName : String, sdd : String, user : String, commitMessage : String, branchNameA : String, branchNameB : String) : String </td></tr>
<tr><td align="left" balign="left"> + moveBranchReference(branchNameB : String, revisionUriB : String, revisionUriA : String) </td></tr>
<tr><td align="left" balign="left"> + updateRevisionOfBranch(branchUriB : String, revisionUriB : String, revisionUriA : String) </td></tr>
<tr><td align="left" balign="left"> + saveGraphVorMerging(graph : String, format : String) </td></tr>
<tr><td align="left" balign="left"> + saveGraphVorMergingInMap(graph : String, format : String) </td></tr>
<tr><td align="left" balign="left"> + loadGraphVorMergingFromMap(graphName : String) : String </td></tr>
<tr><td align="left" balign="left"> + loadGraphVorMerging() : String </td></tr>
<tr><td align="left" balign="left"> + createRebaseQuery(graphName : String, sdd : String, user : String, commitMessage : String, branchNameA : String, branchNameB : String, type : RebaseQueryTypeEnum, triples : String) : String </td></tr>
<tr><td align="left" balign="left"> + getCommitUri(revisionUri : String) : String </td></tr>
<tr><td align="left" balign="left"> + getDeltaAddedUri(revisionUri : String) : String </td></tr>
<tr><td align="left" balign="left"> + getDeltaRemovedUri(revisionUri : String) : String </td></tr>
<tr><td align="left" balign="left"> + createAddedOrRemovedTripleSet(addedOrRemovedDelta : String) : LinkedList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getRevisionNumber(revisionUri : String) : String </td></tr>
<tr><td align="left" balign="left"> + getPatchUserUri(commitUri : String) : String </td></tr>
<tr><td align="left" balign="left"> + getPatchMessage(commitUri : String) : String </td></tr>
<tr><td align="left" balign="left"> + fullGraphCopy(fullGraphUriA : String, fullGraphUriB : String) </td></tr>
		</table></td></tr>
		</table>>, URL="./StrategyManagement.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

