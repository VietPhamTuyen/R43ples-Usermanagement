#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// de.tud.plt.r43ples.merging.control.MergingControl
	c2304 [label=<<table title="de.tud.plt.r43ples.merging.control.MergingControl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../control/MergingControl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MergingControl </td></tr>
<tr><td align="center" balign="center"> de.tud.plt.r43ples.merging.control </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MergingControl() </td></tr>
<tr><td align="left" balign="left"> + setRebaseControl() </td></tr>
<tr><td align="left" balign="left"> + getRebaseControl() : de.tud.plt.r43ples.merging.control.RebaseControl </td></tr>
<tr><td align="left" balign="left"> + getMenuHtmlOutput() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getViewHtmlOutput() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getUpdatedViewHtmlOutput() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getThreeWayReportView(graphName : java.lang.String) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getMergeProcess(response : javax.ws.rs.core.Response, graphName : java.lang.String, branchNameA : java.lang.String, branchNameB : java.lang.String, format : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + getIndividualView() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getIndividualFilter(individualA : java.lang.String, individualB : java.lang.String) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getHighLevelView() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + updateTripleTable(properties : java.lang.String) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + updateTripleTableByTree(triples : java.lang.String) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getTripleView() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + approveToDifferenceModel(id : java.lang.String, isChecked : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + approveHighLevelToDifferenceModel(id : java.lang.String, isChecked : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + createReportProcess() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + updateMergeQuery() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + transformDifferenceModelToRebase() </td></tr>
<tr><td align="left" balign="left"> + createCommitModel(graphName : java.lang.String, sddName : java.lang.String, user : java.lang.String, message : java.lang.String, branch1 : java.lang.String, branch2 : java.lang.String, strategy : java.lang.String, type : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + getCommitModel() : de.tud.plt.r43ples.merging.model.structure.CommitModel </td></tr>
<tr><td align="left" balign="left"> + updateDifferenceModel(triplesId : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + createTableModelSemanticEnrichmentAllIndividualsList() : java.util.List&lt;de.tud.plt.r43ples.merging.model.structure.TableEntrySemanticEnrichmentAllIndividuals&gt; </td></tr>
<tr><td align="left" balign="left"> + openRebaseModel() </td></tr>
<tr><td align="left" balign="left"> + closeRebaseModel() </td></tr>
<tr><td align="left" balign="left"> + getIsRebase() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="../../control/MergingControl.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.management.ProcessManagement
	c2308 [label=<<table title="de.tud.plt.r43ples.merging.management.ProcessManagement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../management/ProcessManagement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ProcessManagement </td></tr>
<tr><td align="center" balign="center"> de.tud.plt.r43ples.merging.management </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ProcessManagement() </td></tr>
<tr><td align="left" balign="left"> + createMergeQuery(graphName : java.lang.String, sdd : java.lang.String, user : java.lang.String, commitMessage : java.lang.String, type : de.tud.plt.r43ples.merging.MergeQueryTypeEnum, branchNameA : java.lang.String, branchNameB : java.lang.String, triples : java.lang.String) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + readDifferenceModel(differenceModelToRead : java.lang.String, differenceModel : de.tud.plt.r43ples.merging.model.structure.DifferenceModel, format : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + convertSDDStringToSDDTripleState(state : java.lang.String) : de.tud.plt.r43ples.merging.SDDTripleStateEnum </td></tr>
<tr><td align="left" balign="left"> + tripleToString(triple : de.tud.plt.r43ples.merging.model.structure.Triple) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getSubject(triple : de.tud.plt.r43ples.merging.model.structure.Triple) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getPredicate(triple : de.tud.plt.r43ples.merging.model.structure.Triple) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getObject(triple : de.tud.plt.r43ples.merging.model.structure.Triple) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getTriplesOfMergeWithQuery(differenceModel : de.tud.plt.r43ples.merging.model.structure.DifferenceModel) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getAllIndividualsOfRevision(graphName : java.lang.String, revisionName : java.lang.String) : java.util.ArrayList&lt;java.lang.String&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllTriplesOfIndividual(graphName : java.lang.String, revisionName : java.lang.String, individualUri : java.lang.String, differenceModel : de.tud.plt.r43ples.merging.model.structure.DifferenceModel) : java.util.HashMap&lt;java.lang.String, de.tud.plt.r43ples.merging.model.structure.TripleIndividualStructure&gt; </td></tr>
<tr><td align="left" balign="left"> + getDifferenceByTriple(triple : de.tud.plt.r43ples.merging.model.structure.Triple, differenceModel : de.tud.plt.r43ples.merging.model.structure.DifferenceModel) : de.tud.plt.r43ples.merging.model.structure.Difference </td></tr>
<tr><td align="left" balign="left"> + createIndividualModelOfRevision(graphName : java.lang.String, revisionName : java.lang.String, differenceModel : de.tud.plt.r43ples.merging.model.structure.DifferenceModel) : de.tud.plt.r43ples.merging.model.structure.IndividualModel </td></tr>
<tr><td align="left" balign="left"> + createIndividualTableList(individualA : java.lang.String, individualB : java.lang.String, individualModelBranchA : de.tud.plt.r43ples.merging.model.structure.IndividualModel, individualModelBranchB : de.tud.plt.r43ples.merging.model.structure.IndividualModel, tableModel : de.tud.plt.r43ples.merging.model.structure.TableModel) : java.util.List&lt;de.tud.plt.r43ples.merging.model.structure.TableRow&gt; </td></tr>
<tr><td align="left" balign="left"> + createHighLevelChangeRenamingModel(highLevelChangeModel : de.tud.plt.r43ples.merging.model.structure.HighLevelChangeModel, differenceModel : de.tud.plt.r43ples.merging.model.structure.DifferenceModel) </td></tr>
<tr><td align="left" balign="left"> + getAllPrefixesOfDifferenceMap(differenceMap : java.util.HashMap&lt;java.lang.String, de.tud.plt.r43ples.merging.model.structure.Difference&gt;) : java.util.HashMap&lt;java.lang.String, de.tud.plt.r43ples.merging.model.structure.Difference&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllDifferencesByPrefix(prefix : java.lang.String, differenceMap : java.util.HashMap&lt;java.lang.String, de.tud.plt.r43ples.merging.model.structure.Difference&gt;) : java.util.ArrayList&lt;de.tud.plt.r43ples.merging.model.structure.Difference&gt; </td></tr>
<tr><td align="left" balign="left"> + createHighLevelChangeTableModel(highLevelChangeModel : de.tud.plt.r43ples.merging.model.structure.HighLevelChangeModel, highLevelChangeTableModel : de.tud.plt.r43ples.merging.model.structure.HighLevelChangeTableModel) </td></tr>
<tr><td align="left" balign="left"> + createDifferenceTree(differenceModel : de.tud.plt.r43ples.merging.model.structure.DifferenceModel, treeList : java.util.List&lt;de.tud.plt.r43ples.merging.model.structure.TreeNode&gt;) </td></tr>
<tr><td align="left" balign="left"> + createTableModel(differenceModel : de.tud.plt.r43ples.merging.model.structure.DifferenceModel, tableModel : de.tud.plt.r43ples.merging.model.structure.TableModel) </td></tr>
<tr><td align="left" balign="left"> + convertTripleStringToPrefixTripleString(tripleString : java.lang.String) : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getPropertiesOfRevision(graphName : java.lang.String, branchNameA : java.lang.String, branchNameB : java.lang.String) : java.util.ArrayList&lt;java.lang.String&gt; </td></tr>
<tr><td align="left" balign="left"> + getWholeContentOfRevision(graphName : java.lang.String, revision : java.lang.String) : com.hp.hpl.jena.rdf.model.Model </td></tr>
<tr><td align="left" balign="left"> + getAllTriplesDividedIntoInsertAndDelete(differenceModel : de.tud.plt.r43ples.merging.model.structure.DifferenceModel, model : com.hp.hpl.jena.rdf.model.Model) : java.util.ArrayList&lt;java.lang.String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="../../management/ProcessManagement.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.model.structure.HighLevelChangeRenaming
	c2324 [label=<<table title="de.tud.plt.r43ples.merging.model.structure.HighLevelChangeRenaming" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./HighLevelChangeRenaming.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HighLevelChangeRenaming </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + HighLevelChangeRenaming(deletetionDifference : Difference, additionDifference : Difference) </td></tr>
<tr><td align="left" balign="left"> + getDeletionDifference() : Difference </td></tr>
<tr><td align="left" balign="left"> + setDeletionDifference(deletionDifference : Difference) </td></tr>
<tr><td align="left" balign="left"> + getAdditionDifference() : Difference </td></tr>
<tr><td align="left" balign="left"> + setAdditionDifference(additionDifference : Difference) </td></tr>
		</table></td></tr>
		</table>>, URL="./HighLevelChangeRenaming.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.model.structure.HighLevelChangeModel
	c2325 [label=<<table title="de.tud.plt.r43ples.merging.model.structure.HighLevelChangeModel" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./HighLevelChangeModel.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HighLevelChangeModel </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + HighLevelChangeModel() </td></tr>
<tr><td align="left" balign="left"> + getHighLevelChangesRenaming() : HashMap&lt;String, HighLevelChangeRenaming&gt; </td></tr>
<tr><td align="left" balign="left"> + setHighLevelChangesRenaming(highLevelChangesRenaming : HashMap&lt;String, HighLevelChangeRenaming&gt;) </td></tr>
<tr><td align="left" balign="left"> + addHighLevelChangeRenaming(identifier : String, highLevelChangeRenaming : HighLevelChangeRenaming) </td></tr>
<tr><td align="left" balign="left"> + removeHighLevelChangeRenaming(identifier : String) </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
		</table></td></tr>
		</table>>, URL="./HighLevelChangeModel.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// de.tud.plt.r43ples.merging.control.MergingControl NAVASSOC de.tud.plt.r43ples.merging.model.structure.HighLevelChangeModel
	c2304:p -> c2325:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// de.tud.plt.r43ples.merging.model.structure.HighLevelChangeModel NAVASSOC de.tud.plt.r43ples.merging.model.structure.HighLevelChangeRenaming
	c2325:p -> c2324:p [taillabel="", label="", headlabel="*", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// de.tud.plt.r43ples.merging.management.ProcessManagement DEPEND de.tud.plt.r43ples.merging.model.structure.HighLevelChangeModel
	c2308:p -> c2325:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
}

